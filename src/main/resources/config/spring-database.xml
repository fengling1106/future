<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
         http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	
    <!-- 数据源 : 支撑JNDI、JDBC、c3p0-->  	
	<!--  bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/cmos" />
	</bean-->
    <!--bean id="dataSource"  
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />  
        <property name="url" value="jdbc:mysql://localhost:3306/futurei?useUnicode=true&amp;characterEncoding=UTF-8" />  
        <property name="username" value="future" />  
        <property name="password" value="future123" />  
    </bean--> 
	<!-- 配置c3p0数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/future" />
		<property name="user" value="future" />
		<property name="password" value="future123" />       
		<property name="minPoolSize" value="5"/>
		<property name="maxPoolSize" value="30"/>
		<property name="initialPoolSize" value="5"/>
		<property name="maxIdleTime" value="60"/>
		<property name="acquireIncrement" value="30"/>
		<property name="maxStatements" value="5"/>
		<property name="idleConnectionTestPeriod" value="60"/>
		<property name="acquireRetryAttempts" value="30"/>
		<property name="breakAfterAcquireFailure" value="true"/>
		<property name="testConnectionOnCheckout" value="true"/>
	</bean>  

	<!-- MyBatis 配置-->
	<!-- 数据库事务配置 -->
	<bean id="MyBatisSpringTransactionFactory" class="org.mybatis.spring.transaction.SpringManagedTransactionFactory" />
    <!--  mybatis的SqlSession的工厂: SqlSessionFactoryBean  dataSource:引用数据源  MyBatis定义数据源,同意加载配置  -->  
	<bean id="sqlSessionFacotry" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:/config/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath:mappers/*/**/*.xml" />
		<property name="dataSource" ref="dataSource"/>
		<property name="transactionFactory" ref="MyBatisSpringTransactionFactory" />
	</bean>
	<!--  mybatis自动扫描加载Sql映射文件/接口 : MapperScannerConfigurer sqlSessionFactory  basePackage:指定sql映射文件/接口所在的包（自动扫描） -->
	<bean id="sqlSessionFactoryScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFacotry" />
		<property name="basePackage" value="com.valen.future"/>
		<property name="markerInterface" value="com.valen.future.dao.BaseDAO"/>
	</bean>
    <!-- 事务管理 : DataSourceTransactionManager dataSource:引用上面定义的数据源  -->  			
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 使用声明式事务  transaction-manager：引用上面定义的事务管理器 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
</beans>